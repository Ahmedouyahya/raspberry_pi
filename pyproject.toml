[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pi-zero-cybersec-tool"
version = "1.0.0"
description = "Educational cybersecurity testing tool for Raspberry Pi Zero - USB attack vector demonstration and defense training"
readme = "README.md"
authors = [
    {name = "Ahmedouyahya(Mr.D137)", email = "Ahmedouyahya2011@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["cybersecurity", "education", "penetration-testing", "raspberry-pi", "usb-attacks"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Topic :: Security",
    "Topic :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux"
]

dependencies = [
    "pycryptodomex>=3.18.0",
    "cryptography>=41.0.0",
    "psutil>=5.9.0",
    "netifaces>=0.11.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.0",
    "colorlog>=6.7.0",
    "jinja2>=3.1.0",
    "markdown>=3.4.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.3.0"
]

analysis = [
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "jupyter>=1.0.0"
]

docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0"
]

[project.urls]
Homepage = "https://github.com/yourusername/pi-zero-cybersec-tool"
Repository = "https://github.com/yourusername/pi-zero-cybersec-tool.git"
Documentation = "https://pi-zero-cybersec-tool.readthedocs.io/"
"Bug Tracker" = "https://github.com/yourusername/pi-zero-cybersec-tool/issues"

[project.scripts]
pi-cybersec = "src.main:main"
decrypt-data = "src.tools.decrypt_data:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=html --cov-report=term"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require actual hardware"
]